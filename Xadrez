#include <stdio.h>

int main() {
    // Sem acentos, compilador com problemas ao exibir
    // Declaracao das variaveis
      int casasTorre = 5, casasBispo = 5, casasRainha = 8; // Numero de casas que cada peca se movera
    int movimentosVerticais = 2, movimentosHorizontais = 1; // Movimento do Cavalo: duas casas para baixo e uma para a esquerda
    int i, j; // Variaveis de controle para os loops

    // TORRE
    // Movimento: 4 casas para a DIREITA
    // Estrutura utilizada: FOR
    printf("Movimento da Torre (4 casas para a direita):\n");
    for (i = 1; i <= casasTorre; i++) {
        printf("Casa %d: Direita\n", i);
    }

    // BISPO
    // Movimento: 5 casas na diagonal para CIMA e DIREITA
    // Estrutura utilizada: WHILE
    printf("\nMovimento do Bispo (5 casas na diagonal para cima e a direita):\n");
    i = 1;
    while (i <= casasBispo) {
        printf("Casa %d: Cima, Direita\n", i);
        i++;
    }

    //  RAINHA 
    // Movimento: 8 casas para a ESQUERDA
    // Estrutura utilizada: DO-WHILE
    printf("\nMovimento da Rainha (8 casas para a esquerda):\n");
    i = 1;
    do {
        printf("Casa %d: Esquerda\n", i);
        i++;
    } while (i <= casasRainha);
    //  CAVALO 
    // Movimento: duas casas para BAIXO e uma para a ESQUERDA
    // Estrutura utilizada: FOR (externo) + WHILE (interno)
    // O loop interno faz as duas casas verticais (para baixo)
    // e o loop externo executa o movimento horizontal (para a esquerda)
    printf("\nMovimento do Cavalo (duas casas para baixo e uma para a esquerda):\n");

    for (i = 1; i <= movimentosHorizontais; i++) {
        j = 1;
        while (j <= movimentosVerticais) {
            printf("Casa %d: Baixo\n", j);
            j++;
        }
        printf("Casa 3: Esquerda\n");
    }

    printf("\nSimulacao concluida com sucesso!\n");

    return 0;
}
